FROM python:3.11-slim

WORKDIR /app

# نصب dependencies
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install supervisor

# کپی فایل‌های پروژه
COPY mqtt_simulator.py ./
COPY mqtt-test.html ./

# ایجاد یک وب سرور ساده برای سرو کردن فایل HTML
RUN pip install flask

# ایجاد فایل وب سرور
RUN echo 'from flask import Flask, send_file, jsonify\n\
import os\n\
\n\
app = Flask(__name__)\n\
\n\
@app.route("/")\n\
def index():\n\
    return send_file("mqtt-test.html")\n\
\n\
@app.route("/health")\n\
def health():\n\
    return jsonify({"status": "healthy", "service": "mqtt-simulator"})\n\
\n\
if __name__ == "__main__":\n\
    port = int(os.environ.get("PORT", 10000))\n\
    app.run(host="0.0.0.0", port=port, debug=False)' > web_server.py

# متغیرهای محیطی
ENV BROKER=test.mosquitto.org
ENV PORT=1883
ENV PREFIX=building/demo
ENV QOS=0
ENV INTERVAL=10
ENV MQTT_USER=""
ENV MQTT_PASS=""

# ایجاد فایل پیکربندی supervisor
RUN echo '[supervisord]\n\
nodaemon=true\n\
user=root\n\
\n\
[program:web_server]\n\
command=python web_server.py\n\
directory=/app\n\
autostart=true\n\
autorestart=true\n\
stdout_logfile=/dev/stdout\n\
stdout_logfile_maxbytes=0\n\
stderr_logfile=/dev/stderr\n\
stderr_logfile_maxbytes=0\n\
\n\
[program:mqtt_simulator]\n\
command=python mqtt_simulator.py\n\
directory=/app\n\
autostart=true\n\
autorestart=true\n\
stdout_logfile=/dev/stdout\n\
stdout_logfile_maxbytes=0\n\
stderr_logfile=/dev/stderr\n\
stderr_logfile_maxbytes=0' > supervisord.conf

EXPOSE 10000

CMD ["supervisord", "-c", "supervisord.conf"]
