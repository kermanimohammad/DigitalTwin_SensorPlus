FROM python:3.11-slim

WORKDIR /app

# نصب dependencies
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# کپی فایل‌های پروژه
COPY mqtt_simulator.py ./
COPY mqtt-test.html ./

# ایجاد یک وب سرور ساده برای سرو کردن فایل HTML
RUN pip install flask

# ایجاد فایل وب سرور
RUN echo 'from flask import Flask, send_file, jsonify\n\
import os\n\
\n\
app = Flask(__name__)\n\
\n\
@app.route("/")\n\
def index():\n\
    return send_file("mqtt-test.html")\n\
\n\
@app.route("/health")\n\
def health():\n\
    return jsonify({"status": "healthy", "service": "mqtt-simulator"})\n\
\n\
if __name__ == "__main__":\n\
    port = int(os.environ.get("PORT", 10000))\n\
    app.run(host="0.0.0.0", port=port)' > web_server.py

# متغیرهای محیطی
ENV BROKER=test.mosquitto.org
ENV PORT=1883
ENV PREFIX=building/demo
ENV QOS=0
ENV INTERVAL=10
ENV MQTT_USER=""
ENV MQTT_PASS=""

# اجرای همزمان وب سرور و شبیه‌ساز
RUN echo '#!/bin/bash\n\
# اجرای وب سرور در پس‌زمینه\n\
python web_server.py &\n\
# اجرای شبیه‌ساز MQTT\n\
python mqtt_simulator.py' > start.sh

RUN chmod +x start.sh

EXPOSE 10000

CMD ["./start.sh"]
